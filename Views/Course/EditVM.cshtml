@model Syntra.MVCAdvanced.ViewModels.CourseSelectListViewModel

@{

    ViewBag.Title = "EditVM";

}

<h2>Edit VM</h2>

@using (Html.BeginForm("Edit", "StoreManager", FormMethod.Post))
{

    @Html.ValidationSummary(true)

    <fieldset>

        <legend>Course</legend>

        @Html.HiddenFor(model => model.Course.Id)

        <div class="editor-label">

            @Html.LabelFor(model => model.Course.TeacherId, "Teacher")

        </div>

        <div class="editor-field">

            @Html.DropDownList("Course.TeacherId", Model.Teachers)

            @Html.ValidationMessageFor(model => model.Course.TeacherId)

        </div>

        <div class="editor-label">

            @Html.LabelFor(model => model.Course.LocationId, "Location")

        </div>

        <div class="editor-field">

            @Html.DropDownList("Course.LocationId", Model.Locations)

            @Html.ValidationMessageFor(model => model.Course.LocationId)

        </div>

        <div class="editor-label">

            @Html.LabelFor(model => model.Course.Name)

        </div>

        <div class="editor-field">

            @Html.EditorFor(model => model.Course.Name)

            @Html.ValidationMessageFor(model => model.Course.Name)

        </div>

        <div class="editor-label">

            @Html.LabelFor(model => model.Course.DateTime)

        </div>

        <div class="editor-field">

            @Html.EditorFor(model => model.Course.DateTime)

            @Html.ValidationMessageFor(model => model.Course.DateTime)

        </div>

        <p>

            <input type="submit" value="Save" />

        </p>

    </fieldset>

}

<div>

    @Html.ActionLink("Back to List", "Index")

</div>
